// TOOL ispLEVER Classic 2.0.00.17.20.15
// MODULE address_decoding
// TITLE Decode of addresses and IO with VDA and VPA assertion.
NETWORK address_decoding
MODULE address_decoding
XRESET_SIGNAL !XRESET 0@0ns 1@0ns
XRESET_SIGNAL XRESET 0@0ns 1@0ns
VECTOR XTEST_OE PATTERN 1#0ns
ftrace(address_decoding.tra, "%12t: %b%b%b%b%b%b%b%b%b%b%b%b%b%b%b->%b%b%b%b%b%b%b",$time,A19,A18,A17,A16,A15,A14,A13,A12,A11,A10,A9,A8,A7,A6,A5,RAM1,RAM2,DUART,VIA1,VIA2,RTC,ROM);
SET INTERNAL_ONLY_ALL_SET$$ [A19,A18,A17,A16,A15,A14,A13,A12,A11,A10,A9,A8,A7,A6,A5,RAM1,RAM2,DUART,VIA1,VIA2,RTC,ROM]
BREAK IF INTERNAL_ONLY_ALL_SET$$ ->? DO PRINT
VECTOR A19 INIT X PATTERN 1*(0#0,1#17,1#2)
VECTOR A18 INIT X PATTERN 1*(0#0,1#16,0#1,1#1,1#1)
VECTOR A17 INIT X PATTERN 1*(0#0,1#15,0#2,1#1,1#1)
VECTOR A16 INIT X PATTERN 1*(0#0,1#14,0#1,1#1,0#1,1#1,1#1)
VECTOR A15 INIT X PATTERN 1*(0#0,1#12,0#2,1#2,0#1,1#1,1#1)
VECTOR A14 INIT X PATTERN 1*(0#0,1#11,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A13 INIT X PATTERN 1*(0#0,1#11,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A12 INIT X PATTERN 1*(0#0,1#10,0#2,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A11 INIT X PATTERN 1*(0#0,1#11,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A10 INIT X PATTERN 1*(0#0,1#9,0#1,1#1,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A9 INIT X PATTERN 1*(0#0,1#1,0#8,1#2,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A8 INIT X PATTERN 1*(0#0,1#1,0#8,1#2,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A7 INIT X PATTERN 1*(0#0,1#11,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A6 INIT X PATTERN 1*(0#0,1#5,0#4,1#2,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
VECTOR A5 INIT X PATTERN 1*(0#0,1#3,0#2,1#2,0#2,1#2,0#1,1#1,0#1,1#2,0#1,1#1,1#1)
EXPECT RAM1 INIT X PATTERN 1*(0#0,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,0#1,0#1,0#1,1#1,1#1,0#1,\
0#1,0#1,1#1,1#1);
EXPECT RAM2 INIT X PATTERN 1*(1#0,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,\
1#1,1#1,0#1,0#1);
EXPECT DUART INIT X PATTERN 1*(1#0,1#1,1#1,1#1,1#1,0#1,0#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,\
1#1,1#1,1#1,1#1);
EXPECT VIA1 INIT X PATTERN 1*(1#0,0#1,0#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,\
1#1,1#1,1#1,1#1);
EXPECT VIA2 INIT X PATTERN 1*(1#0,1#1,1#1,0#1,0#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,\
1#1,1#1,1#1,1#1);
EXPECT RTC INIT X PATTERN 1*(1#0,1#1,1#1,1#1,1#1,1#1,1#1,0#1,0#1,1#1,1#1,1#1,1#1,1#1,1#1,\
1#1,1#1,1#1,1#1);
EXPECT ROM INIT X PATTERN 1*(1#0,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,1#1,0#1,0#1,1#1,\
1#1,1#1,1#1,1#1);
RUN
ÿ